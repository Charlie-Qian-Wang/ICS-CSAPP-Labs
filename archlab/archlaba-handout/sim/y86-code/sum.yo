  0x000:              | 	.pos 0 
  0x000: 30f400010000 | init:	irmovl Stack, %esp  	# Set up stack pointer  
  0x006: 30f500010000 | 	irmovl Stack, %ebp  	# Set up base pointer   
  0x00c: 802c000000   | 	call Main		# Execute main program
  0x011: 00           | 	halt			# Terminate program 
                      | 
  0x014:              | 	.align 4 	
  0x014: 0a000000     | ele1:	.long 0x00a
  0x018: 1c000000     | 	.long ele2
  0x01c: b0000000     | ele2:	.long 0x0b0
  0x020: 24000000     | 	.long ele3
  0x024: 000c0000     | ele3:	.long 0xc00
  0x028: 00000000     | 	.long 0	
                      | 
  0x02c: a05f         | Main:	pushl %ebp
  0x02e: 2045         | 	rrmovl %esp,%ebp
  0x030: 30f214000000 | 	irmovl ele1,%edx
  0x036: a02f         | 	pushl %edx      	# Push ele1
  0x038: 8042000000   | 	call sum_list		# sum_list(ele1)
  0x03d: 2054         | 	rrmovl %ebp,%esp
  0x03f: b05f         | 	popl %ebp
  0x041: 90           | 	ret 
                      | 
                      | /* $begin sum-ys 0 */
                      | 	# int sum_list(list_ptr ls)
  0x042: a05f         | sum_list:	pushl	%ebp
  0x044: 2045         | 		rrmovl	%esp,%ebp
  0x046: 501508000000 | 		mrmovl	8(%ebp),%ecx
  0x04c: 6300         | 		xorl	%eax,%eax
  0x04e: 6211         | 		andl	%ecx,%ecx
  0x050: 736c000000   | 		je	End
  0x055: 506100000000 | 	Loop:	mrmovl	(%ecx),%esi
  0x05b: 6060         | 		addl	%esi,%eax
  0x05d: 506104000000 | 		mrmovl	4(%ecx), %esi
  0x063: 2061         | 		rrmovl	%esi, %ecx
  0x065: 6211         | 		andl	%ecx, %ecx
  0x067: 7455000000   | 		jne	Loop
  0x06c: 2054         | 	End:	rrmovl	%ebp,%esp
  0x06e: b05f         | 		popl	%ebp
  0x070: 90           | 		ret
                      | /* $end sum-ys 0 */
                      | 
                      | # The stack starts here and grows to lower addresses
  0x100:              | 	.pos 0x100		
  0x100:              | Stack:
