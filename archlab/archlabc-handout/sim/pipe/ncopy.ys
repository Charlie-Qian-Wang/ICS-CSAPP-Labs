#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len ints to dst.
# Return the number of positive ints (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
ncopy:	pushl %ebp		# Save old frame pointer
	rrmovl %esp,%ebp	# Set up new frame pointer
	pushl %esi		# Save callee-save regs
	pushl %ebx
	pushl %edi
	mrmovl 8(%ebp),%ebx	# src
	mrmovl 16(%ebp),%edx	# len
	mrmovl 12(%ebp),%ecx	# dst

##################################################################
# You can modify this portion
	# Loop header
	xorl %eax,%eax		# count = 0;
	iaddl $-1, %edx		# len <= 1?
	jle Last		# if so, goto Done:
Loop:	mrmovl (%ebx), %esi	# read val from src...
	mrmovl 4(%ebx), %edi
	iaddl $8, %ebx
	andl %esi, %esi		# val <= 0?
	jle Npos1		# if so, goto Npos:
	iaddl $1, %eax		# count++
Npos1:	andl %edi, %edi
	jle Npos2
	iaddl $1, %eax
Npos2:	rmmovl %esi, (%ecx)
	rmmovl %edi, 4(%ecx)
	iaddl $8, %ecx		# dst++
	iaddl $-2, %edx
	jg Loop		# if so, goto Loop:
Last: 	jne Done
	mrmovl (%ebx), %esi
	rmmovl %esi, (%ecx)
	andl %esi, %esi         # val <= 0?
        jle Done                # if so, goto Npos:
        iaddl $1, %eax          # count++
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	popl %edi               # Restore callee-save registers
	popl %ebx
	popl %esi
	rrmovl %ebp, %esp
	popl %ebp
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
